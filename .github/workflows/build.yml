name: Setup and build

on: [push]

jobs:
  setup:
    uses: ./.github/workflows/setup.yml
    with:
      exclude: a
  # setup:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     apps-matrix: ${{ steps.apps-matrix.outputs.result }}
  #   steps:
  #     - uses: actions/github-script@v6
  #       env:
  #         COMMITS: ${{ toJSON(github.event.commits) }}
  #       id: apps-matrix
  #       with:
  #         script: |
  #           const commits = JSON.parse(process.env.COMMITS)
  #           const apps = []
  #           const ALL = 'app:all'
  #           const APP_C = 'app:c'
  #           const APP_A = 'app:a'
  #           for (const commit of commits) {
  #             const app = commit.message?.match(/\[.*\]/)?.at(0)?.replace(/\s/g,'')?.toLowerCase() || ''
  #             if(app.includes(ALL)) {
  #               apps.push('a','c')
  #               break
  #             }
  #             if(app.includes(APP_A) && !apps.includes('a')) apps.push('a')
  #             if(app.includes(APP_C) && !apps.includes('c')) apps.push('c')
  #             if(apps.length === 2) break
  #           }
  #           if(!apps.length) return false
  #           return apps

  result:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: print
        run: |
          echo ${{ needs.setup.outputs.apps-matrix }}

  task:
    needs: [setup]
    # runs-on: ubuntu-latest
    if: needs.setup.outputs.apps-matrix != 'false'
    strategy:
      matrix:
        app: ${{fromJson(needs.setup.outputs.apps-matrix)}}
    uses: ./.github/workflows/test.yml
    with:
      app: ${{ matrix.app }}
    # steps:
    #   - name: get environment service
    #     run: |
    #       APP=${{ inputs.app }}
    #       if [ $APP == 'c' ]; then
    #         echo "service=f" >> $GITHUB_ENV
    #       elif [ $APP == 'a' ]; then
    #         echo "service=a" >> $GITHUB_ENV
    #       fi

    #   - name: name tests ${{ inputs.app }}
    #     run: echo ${{ env.service }}
